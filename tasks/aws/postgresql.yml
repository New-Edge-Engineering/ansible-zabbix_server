---
- name: check if zabbix exists as database role in AWS RDS instance
  sudo: yes
  sudo_user: postgres
  shell: "psql --command='\\dg' --host={{ zabbix_server_db_host|mandatory }} | grep -c zabbix"
  register: zabbix_database_roles
  ignore_errors: true
  tags:
    - zabbix
    - configuration
    - user
    - database
    
- name: create zabbix database role in AWS RDS instance
  sudo: yes
  sudo_user: postgres
  shell: "psql --command=\"create role zabbix with password '{{ zabbix_server_db_pass|mandatory }}' login;\" --host={{ zabbix_server_db_host|mandatory }}"
  when: zabbix_database_roles.stdout|int == 0
  tags:
    - zabbix
    - configuration
    - user
    - database

- name: create database in AWS RDS instance
  sudo: yes
  sudo_user: postgres
  postgresql_db:
    login_host={{ zabbix_server_db_host|mandatory }}
    login_password={{ zabbix_server_db_master_password|mandatory }}
    login_user={{ zabbix_server_db_master_user|mandatory }}
    name="{{zabbix_server_db_name}}"
    owner="{{zabbix_server_db_user}}"
    encoding=UTF-8
    lc_collate=en_US.UTF-8
    lc_ctype=en_US.UTF-8
    template=template0
  register: zabbix_database
  tags:
    - zabbix
    - setup
    - database

- name: stop local postgresql server
  service:
    name=postgresql
    state=stopped
  tags:
    - zabbix
    - database
